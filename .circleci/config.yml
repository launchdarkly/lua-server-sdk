version: 2.1

workflows:
  version: 2
  all:
    jobs:
      - build-test-linux-luajit:
          matrix:
            parameters:
              ubuntu-version: ["18.04", "20.04"]
      - build-test-linux-lua:
          matrix:
            parameters:
              lua-version: ["5.2", "5.3"]
              ubuntu-version: ["18.04", "20.04"]


commands:
  # Fetches a recent version of cmake from Kitware repositories.
  # This is necessary for building the C Server SDK.
  get-cmake:
    steps:
      - run:
          name: Install recent cmake
          command: |
            codename=$(cat /etc/os-release | grep UBUNTU_CODENAME | sed -e "s/^UBUNTU_CODENAME=//")
            wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | sudo tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null
            echo "deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ ${codename} main" | sudo tee /etc/apt/sources.list.d/kitware.list >/dev/null
            sudo apt purge --auto-remove cmake
            sudo apt-get update -y
            sudo apt-get install -y cmake

  # Builds the C Server SDK, followed by the Lua Server SDK.
  build-sdk:
    steps:
      - run:
          name: Build c-server-sdk
          command: ./.ldrelease/build-c-server.sh
      - run:
          name: Build lua-server-sdk
          command: |
            sudo luarocks make launchdarkly-server-sdk-1.0-0.rockspec
            sudo luarocks make launchdarkly-server-sdk-redis-1.0-0.rockspec


jobs:
  build-test-linux-luajit:
    parameters:
      ubuntu-version:
        type: string
    docker:
      - image: cimg/base:current-<< parameters.ubuntu-version >>
      - image: redis
    steps:
      - checkout
      - run:
          name: Prepare
          command: |
            sudo apt-get update -y
            sudo apt-get install -y luajit libluajit-5.1-dev lua-ldoc zip \
              ca-certificates curl libpcre3 libcurl4-openssl-dev \
              libhiredis-dev git build-essential libpcre3-dev luarocks wget
      - get-cmake
      - build-sdk
      - run:
          name: Run tests
          command: |
            luajit test.lua

  build-test-linux-lua:
    parameters:
      lua-version:
        type: string
      ubuntu-version:
        type: string
    docker:
      - image: cimg/base:current-<< parameters.ubuntu-version >>
      - image: redis
    steps:
      - checkout
      - run:
          name: Install system packages
          command: |
            sudo apt-get update -y
            sudo apt-get install -y lua<< parameters.lua-version >> liblua<< parameters.lua-version >>-dev lua-ldoc zip \
              ca-certificates curl libpcre3 libcurl4-openssl-dev \
              libhiredis-dev git build-essential libpcre3-dev luarocks wget
      - get-cmake
      - build-sdk
      - run:
          name: Run tests
          command: |
            lua<< parameters.lua-version >> test.lua
