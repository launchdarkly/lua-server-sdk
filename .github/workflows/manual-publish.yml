name: Publish Package
on:
  workflow_dispatch:
    inputs:
      rockspec:
        type: choice
        description: 'What to publish?'
        options:
          - server
          - redis
          - both
      dry_run:
        description: "Dry run? If checked, don't publish."
        type: boolean
        required: false
        default: true
      skip_pack:
        description: "Don't include source rock? If checked, only publish rockspec."
        required: false
        type: boolean
        default: false
      force:
        description: "Overwrite existing version?"
        type: boolean
        required: false
        default: false
  workflow_call:
    inputs:
      rockspec:
        required: false
        type: string
      dry_run:
        required: false
        type: boolean
      skip_pack:
        required: false
        type: boolean
      force:
        required: false
        type: boolean

env:
  ROCKSPEC: ${{ inputs.rockspec == null && 'both' || inputs.rockspec }}
  DRY_RUN: ${{ inputs.dry_run == null && 'true' || inputs.dry_run }}
  SKIP_PACK: ${{ inputs.skip_pack == null && 'false' || inputs.skip_pack }}
  FORCE: ${{ inputs.force == null && 'false' || inputs.force }}
jobs:
  rockspecs:
    uses: ./.github/workflows/rockspec-info.yml

  build-publish:
    needs: rockspecs
    runs-on: ubuntu-latest

    # Needed for AWS SSM access.
    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v4
      - uses: launchdarkly/gh-actions/actions/release-secrets@release-secrets-v1.0.0
        name: 'Get LuaRocks token'
        with:
          aws_assume_role: ${{ vars.AWS_ROLE_ARN }}
          ssm_parameter_pairs: '/production/common/releasing/luarocks/token = LUAROCKS_API_TOKEN'

      - uses: ./.github/actions/ci
        with:
          server-rockspec: ${{ needs.rockspecs.outputs.server }}
          redis-rockspec: ${{ needs.rockspecs.outputs.server_redis }}

      - uses: ./.github/actions/publish
        name: ${{ format('Publish launchdarkly-server-sdk @ {0}', needs.rockspecs.outputs.server_version) }}
        if: ${{ env.ROCKSPEC == 'server' || env.ROCKSPEC == 'both' }}
        with:
          dry_run: ${{ env.DRY_RUN }}
          rockspec: ${{ needs.rockspecs.outputs.server }}
          skip_pack: ${{ env.SKIP_PACK }}
          force: ${{ env.FORCE }}

      - uses: ./.github/actions/publish
        name: ${{ format('Publish launchdarkly-server-sdk-redis @ {0}', needs.rockspecs.outputs.server_redis_version) }}
        if: ${{ env.ROCKSPEC == 'redis' || env.ROCKSPEC == 'both'}}
        with:
          dry_run: ${{ env.DRY_RUN }}
          rockspec: ${{ needs.rockspecs.outputs.server_redis }}
          skip_pack: ${{ env.SKIP_PACK }}
          force: ${{ env.FORCE }}

  install-server-sdk:
    name: ${{ format('Install launchdarkly-server-sdk @ {0}', needs.rockspecs.outputs.server_version) }}
    needs: [rockspecs, build-publish]
    if: ${{ env.ROCKSPEC == 'server' || env.ROCKSPEC == 'both' }}
    uses: ./.github/workflows/install-lua-sdk.yml
    with:
      package: launchdarkly-server-sdk
      version: ${{ needs.rockspecs.outputs.server_version }}


  install-server-redis:
    name: ${{ format('Install launchdarkly-server-sdk-redis @ {0}', needs.rockspecs.outputs.server_redis_version) }}
    needs: [rockspecs, build-publish]
    if: ${{ env.ROCKSPEC == 'redis' || env.ROCKSPEC == 'both' }}
    uses: ./.github/workflows/install-lua-sdk.yml
    with:
      package: launchdarkly-server-sdk-redis
      version: ${{ needs.rockspecs.outputs.server_redis_version }}
