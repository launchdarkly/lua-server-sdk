name: Run Release Please

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  release-please:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write # Needed to create the release PR
      contents: write # Needed to generate the release

    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      prs_created: ${{ steps.release.outputs.prs_created }}
      pr_branch_name: ${{ steps.release.outputs.prs_created == 'true' && fromJSON(steps.release.outputs.pr).headBranchName || '' }}
    steps:
      - uses: google-github-actions/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          target-branch: ${{ github.ref_name }}

  rockspec-info:
    needs: release-please
    uses: ./.github/workflows/rockspec-info.yml

  update-release-pr:
    needs: release-please
    if: ${{ needs.release-please.outputs.prs_created == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Update launchdarkly-server-sdk rockspec
        uses: ./.github/actions/update-versions
        with:
          package: launchdarkly-server-sdk
          branch: ${{ needs.release-please.outputs.pr_branch_name }}

      - name: Update launchdarkly-server-sdk-redis rockspec
        uses: ./.github/actions/update-versions
        with:
          package: launchdarkly-server-sdk-redis
          branch: ${{ needs.release-please.outputs.pr_branch_name }}

  publish-docs:
    permissions:
      contents: write # Needed to publish to Github Pages
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build documentation
        uses: ./.github/actions/build-docs

      - name: Publish docs
        uses: ./.github/actions/publish-docs
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  publish-server:
    permissions: # Needed for access to the LuaRocks token
      id-token: write
      contents: read
    needs: [release-please, rockspec-info]
    if: ${{ needs.release-please.outputs.release_created == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: launchdarkly/gh-actions/actions/release-secrets@release-secrets-v1.0.2
        name: 'Get LuaRocks token'
        with:
          aws_assume_role: ${{ vars.AWS_ROLE_ARN }}
          ssm_parameter_pairs: '/production/common/releasing/luarocks/token = LUAROCKS_API_TOKEN'
      - uses: ./.github/actions/ci
        with:
          rockspec: ${{ fromJSON(needs.rockspec-info.outputs.info).server }}
      - uses: ./.github/actions/publish
        name: Publish server package
        with:
          dry_run: 'false'
          rockspec: ${{ fromJSON(needs.rockspec-info.outputs.info).server }}

  publish-redis:
    permissions: # Needed for access to the LuaRocks token
      id-token: write
      contents: read
    needs: [ publish-server, rockspec-info ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: launchdarkly/gh-actions/actions/release-secrets@release-secrets-v1.0.2
        name: 'Get LuaRocks token'
        with:
          aws_assume_role: ${{ vars.AWS_ROLE_ARN }}
          ssm_parameter_pairs: '/production/common/releasing/luarocks/token = LUAROCKS_API_TOKEN'
      - uses: ./.github/actions/ci
        with:
          rockspec: ${{ fromJSON(needs.rockspec-info.outputs.info).redis }}
      - uses: ./.github/actions/publish
        name: Publish redis package
        with:
          dry_run: 'false'
          rockspec: ${{ fromJSON(needs.rockspec-info.outputs.info).redis }}
