name: CI Workflow
description: 'Shared CI workflow.'
inputs:
  lua-version:
    description: 'Version of Lua to use for building and testing.'
    required: false
    default: '5.3'
  cpp-sdk-version:
    description: 'Version of the C++ Server-side SDK to use for building and testing.'
    required: false
    default: 'launchdarkly-cpp-server-redis-source-v2.1.0'
  server-rockspec:
    description: 'The rockspec file for the server-side SDK.'
    required: true
  redis-rockspec:
    description: 'The rockspec file for the Redis integration'
    required: true



runs:
  using: composite
  steps:
    - name: Install Lua
      uses: leafo/gh-actions-lua@35bcb06abec04ec87df82e08caa84d545348536e
      with:
        luaVersion: ${{ inputs.lua-version }}
    - name: Install LuaRocks
      uses: leafo/gh-actions-luarocks@e65774a6386cb4f24e293dca7fc4ff89165b64c5
    - name: Install Boost
      id: install-boost
      uses: MarkusJx/install-boost@v2.4.4
      with:
        boost_version: 1.81.0
        platform_version: "22.04"
    - name: Install CPP SDK
      uses: ./.github/actions/install-cpp-sdk-redis
      with:
          version: ${{ inputs.cpp-sdk-version }}
          path: cpp-sdk

    - name: Build Lua Server-side SDK
      shell: bash
      run:  |
        luarocks make ${{ inputs.server-rockspec }} \
        LD_DIR=./cpp-sdk/build-dynamic/release

    - name: Build Lua Server-side SDK with Redis
      shell: bash
      run: |
        luarocks make ${{ inputs.redis-rockspec }} \
        LDREDIS_DIR=./cpp-sdk/build-dynamic/release

    - name: Run Lua Server-side SDK Tests
      shell: bash
      if: ${{ ! contains(inputs.lua-version, 'jit') }}
      run: luarocks test ${{ inputs.server-rockspec }}
      env:
        # Needed because boost isn't installed in default system paths, which is
        # what the C++ Server-side SDK shared object expects.
        LD_LIBRARY_PATH: ${{ steps.install-boost.outputs.BOOST_ROOT }}/lib

    - name: Run Lua Server-side SDK Tests (JIT)
      shell: bash
      if: ${{ contains(inputs.lua-version, 'jit') }}
      run: luajit test.lua
      env:
        # Needed because boost isn't installed in default system paths, which is
        # what the C++ Server-side SDK shared object expects.
        LD_LIBRARY_PATH: ${{ steps.install-boost.outputs.BOOST_ROOT }}/lib

    - name: Run Lua Server-side SDK with Redis Tests
      shell: bash
      if: ${{ ! contains(inputs.lua-version, 'jit') }}
      run: luarocks test ${{ inputs.redis-rockspec }}
      env:
        # Needed because boost isn't installed in default system paths, which is
        # what the C++ Server-side SDK shared object expects. Same for hiredis which is bundled
        # with the SDK release.
        LD_LIBRARY_PATH: ${{ steps.install-boost.outputs.BOOST_ROOT }}/lib;./cpp-sdk/build-dynamic/release/lib

    - name: Run Lua Server-side SDK with Redis Tests (JIT)
      shell: bash
      if: ${{ contains(inputs.lua-version, 'jit') }}
      run: luajit test-redis.lua
      env:
        # Needed because boost isn't installed in default system paths, which is
        # what the C++ Server-side SDK shared object expects. Same for hiredis which is bundled
        # with the SDK release.
        LD_LIBRARY_PATH: ${{ steps.install-boost.outputs.BOOST_ROOT }}/lib;./cpp-sdk/build-dynamic/release/lib

    - name: Run hello-lua-server example
      if: ${{ !contains(inputs.lua-version, 'jit') }}
      shell: bash
      env:
        LD_SDK_KEY: "fake-sdk-key"
        # Needed because boost isn't installed in default system paths, which is
        # what the C++ Server-side SDK shared object expects.
        LD_LIBRARY_PATH: ${{ steps.install-boost.outputs.BOOST_ROOT }}/lib
      run: |
        lua ./examples/hello-lua-server/hello.lua
        

    - name: Run hello-lua-server example (JIT)
      if: ${{ contains(inputs.lua-version, 'jit') }}
      shell: bash
      env:
        LD_SDK_KEY: "fake-sdk-key"
        # Needed because boost isn't installed in default system paths, which is
        # what the C++ Server-side SDK shared object expects.
        LD_LIBRARY_PATH: ${{ steps.install-boost.outputs.BOOST_ROOT }}/lib
      run: |
        luajit ./examples/hello-lua-server/hello.lua
